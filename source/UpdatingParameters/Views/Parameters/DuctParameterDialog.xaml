<views:BaseRevitWindow x:Class="UpdatingParameters.Views.Parameters.DuctParameterDialog"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:local="clr-namespace:UpdatingParameters.Views.Parameters"
                 xmlns:views="clr-namespace:NoNameApi.Views;assembly=NoNameAPI"
                 mc:Ignorable="d"
                 Title="Параметры воздуховода" 
                 Height="400" Width="400"
                 WindowStartupLocation="CenterScreen">
  <Grid Margin="20">
    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <!-- Общие стили -->
    <Grid.Resources>
        <Style TargetType="Label">
            <Setter Property="Margin" Value="0,8,15,8"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="Margin" Value="0,5"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" 
                            Value="{Binding RelativeSource={RelativeSource Self}, 
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="BorderBrush" Value="#E74C3C"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#3498DB"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#2980B9"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Padding" Value="20,8"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Background" Value="#3498DB"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2980B9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2471A3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Grid.Resources>

    <!-- Поля ввода -->
    <Label Content="Материал:" Grid.Row="0"/>
    <TextBox Grid.Row="0" Grid.Column="1" 
             Text="{Binding Material, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

    <Label Content="Сечение:" Grid.Row="1"/>
    <TextBox Grid.Row="1" Grid.Column="1" 
             Text="{Binding Shape, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

    <Label Content="Внешняя изоляция:" Grid.Row="2"/>
    <TextBox Grid.Row="2" Grid.Column="1" 
             Text="{Binding ExternalInsulation}"/>

    <Label Content="Внутренняя изоляция:" Grid.Row="3"/>
    <TextBox Grid.Row="3" Grid.Column="1" 
             Text="{Binding InternalInsulation}"/>

    <Label Content="Размер:" Grid.Row="4"/>
    <TextBox Grid.Row="4" Grid.Column="1" 
             Text="{Binding Size, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

    <Label Content="Толщина стенки:" Grid.Row="5"/>
    <TextBox Grid.Row="5" Grid.Column="1" 
             Text="{Binding Thickness, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

    <!-- Кнопки -->
    <StackPanel Grid.Row="6" Grid.ColumnSpan="2" 
                Orientation="Horizontal" 
                HorizontalAlignment="Right" 
                Margin="0,20,0,0">
        <Button x:Name="OkButton" 
                Content="OK" 
                Margin="0,0,10,0" 
                Click="OkButton_Click"/>
        <Button Content="Отмена"
              
                Click="CancelButton_Click"/>
    </StackPanel>
</Grid>
</views:BaseRevitWindow>
