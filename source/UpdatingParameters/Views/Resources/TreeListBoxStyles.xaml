<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:views="clr-namespace:UpdatingParameters.Views"
                    xmlns:converters="clr-namespace:UpdatingParameters.Views.Converters"
                    >
    <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter" />
    <!-- Стиль по умолчанию для границ -->
    <Style x:Key="TreeListBoxDefaultItemBorderStyle" TargetType="Border">
        <Setter Property="Padding" Value="5" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFE8E8E8" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль по умолчанию для кнопки разворачивания -->
    <Style x:Key="TreeListBoxDefaultExpanderStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Width="16" Height="16" Background="Transparent">
                        <Path x:Name="Arrow"
                              Fill="Black"
                              Data="M 0 0 L 8 0 L 4 4 Z"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 4 4 L 8 0 Z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Стиль для контейнера элементов -->
    <Style x:Key="TreeItemDefaultContainerStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
     <!-- Шаблон элемента по умолчанию -->
            <DataTemplate x:Key="DefaultItemTemplate">
                <StackPanel>
                    <!-- Родительский элемент -->
                    <Border
                        Style="{Binding RelativeSource={RelativeSource AncestorType=views:TreeListBox}, 
                              Path=ItemBorderStyle, 
                              TargetNullValue={StaticResource TreeListBoxDefaultItemBorderStyle}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Кнопка разворачивания -->
                            <ToggleButton x:Name="Expander"
                                          Grid.Column="0"
                                          IsChecked="{Binding IsExpanded}"
                                          Style="{StaticResource TreeListBoxDefaultExpanderStyle}"
                                          VerticalAlignment="Center">
                                <ToggleButton.Visibility>
                                    <MultiBinding Converter="{StaticResource CountToVisibilityConverter}">
                                        <Binding Path="ChildrenCount" />
                                        <Binding RelativeSource="{RelativeSource AncestorType=views:TreeListBox}"
                                                 Path="ShowExpander" />
                                    </MultiBinding>
                                </ToggleButton.Visibility>
                            </ToggleButton>

                            <!-- Содержимое родительского элемента -->
                            <ContentPresenter x:Name="ParentContent"
                                              Grid.Column="2"
                                              Content="{Binding}"
                                              ContentTemplate="{Binding RelativeSource={RelativeSource AncestorType=views:TreeListBox}, 
                                                                 Path=ParentItemTemplate}" />
                        </Grid>
                    </Border>

                    <!-- Дочерние элементы -->
                    <ItemsControl ItemsSource="{Binding Children}"
                                  Margin="{Binding RelativeSource={RelativeSource AncestorType=views:TreeListBox}, 
                                           Path=ChildIndent}">
                        <ItemsControl.Style>
                            <Style TargetType="ItemsControl">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border
                                    Style="{Binding RelativeSource={RelativeSource AncestorType=views:TreeListBox}, 
                                          Path=ItemBorderStyle, 
                                          TargetNullValue={StaticResource TreeListBoxDefaultItemBorderStyle}}">
                                    <ContentPresenter Content="{Binding}"
                                                      ContentTemplate="{Binding RelativeSource={RelativeSource AncestorType=views:TreeListBox}, 
                                                                         Path=ChildItemTemplate}" />
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </DataTemplate>
</ResourceDictionary>