<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Color x:Key="DodgerBlue">#1e90ff</Color>
    <Color x:Key="DarkBlueColor">#1976D2</Color>
    <Color x:Key="DeepBlueColor">#0A58CA</Color>
    <Color x:Key="LightGrayColor">#d3d3d3</Color>
    <Color x:Key="DarkGrayColor">#757575</Color>
    <Color x:Key="WindowBackgroundColor">#F0F0F0</Color>
    <Color x:Key="PlatinumColor">#E8E8E8</Color>
    <Color x:Key="SilverGray">#8a9597</Color>
    <SolidColorBrush x:Key="ScrollBarThumbBrush" Color="#808080" /> <!-- Цвет ползунка -->
    <SolidColorBrush x:Key="ScrollBarThumbHoverBrush" Color="#777777" /> <!-- Цвет ползунка при наведении -->
    <SolidColorBrush x:Key="ScrollBarThumbPressedBrush" Color="#5e5e5e" /> <!-- Цвет ползунка при перетаскивании -->
    <SolidColorBrush x:Key="BlueBrush" Color="{StaticResource DodgerBlue}" />
    <SolidColorBrush x:Key="DarkBlueBrush" Color="{StaticResource DarkBlueColor}" />
    <SolidColorBrush x:Key="DeepBlueBrush" Color="{StaticResource DeepBlueColor}" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}" />
    <SolidColorBrush x:Key="ContentBrush" Color="White" />
    <SolidColorBrush x:Key="CloseButtonTextBrush" Color="{StaticResource DarkGrayColor}" />
    <SolidColorBrush x:Key="TitleWindowBrush" Color="Black" />
    <SolidColorBrush x:Key="TitleButtonContentBrush" Color="Black" />
    <SolidColorBrush x:Key="TitleButtonIsMouseOverBrush" Color="{StaticResource PlatinumColor}" />
    <SolidColorBrush x:Key="TitleButtonIsPressedBrush" Color="{StaticResource LightGrayColor}" />
    <SolidColorBrush x:Key="TitleButtonContentIsMouseOvertBrush" Color="Black" />
    <SolidColorBrush x:Key="TextBlockColorBrush" Color="Black" />
    <SolidColorBrush x:Key="GroupBoxHeaderBrush" Color="{StaticResource DodgerBlue}" />
    <SolidColorBrush x:Key="BorderBrush" Color="#DDDDDD" />
    <SolidColorBrush x:Key="GroupBoxContentBrush" Color="White" />
    <SolidColorBrush x:Key="SetupButtonBrush" Color="{StaticResource DodgerBlue}" />
    <SolidColorBrush x:Key="SetupButtonBrush2" Color="{StaticResource DarkBlueColor}" />
    <SolidColorBrush x:Key="ItemsControlBrush1" Color="White" />
    <SolidColorBrush x:Key="ItemsControlBrush2" Color="#f2f3f4" />
    <SolidColorBrush x:Key="IsMouseOverBrush" Color="{StaticResource PlatinumColor}" />
    <SolidColorBrush x:Key="IsSelectedBrush" Color="{StaticResource LightGrayColor}" />
    <SolidColorBrush x:Key="DefaultButtonBrush" Color="Transparent" />
    <SolidColorBrush x:Key="WindowBorderBrush" Color="#BBBBBB" />
    <SolidColorBrush x:Key="IsMouseOverButtonBrush" Color="{StaticResource DarkBlueColor}" />
    <SolidColorBrush x:Key="IsPressedButtonBrush" Color="{StaticResource DeepBlueColor}" />
    <SolidColorBrush x:Key="SelectionIndicatorBrush" Color="{StaticResource DodgerBlue}" />
    <SolidColorBrush x:Key="GridSplitterBrush" Color="#808080" /> 
    <SolidColorBrush x:Key="CheckboxBorderBrush" Color="#bbbbbb" />
    <SolidColorBrush x:Key="GridSplitterBorderBrush" Color="#777777" />
    <SolidColorBrush x:Key="SettingsButtonBrush" Color="{StaticResource SilverGray}" />
    <SolidColorBrush x:Key="SelectButtonForegroundBrush" Color="{StaticResource DodgerBlue}" />
    <Style x:Key="DeleteButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="28" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Background" Value="#E5E5E5" />
        <!-- Изменено на серый цвет -->
        <Setter Property="BorderBrush" Value="#BDBDBD" />
        <!-- Также обновлен цвет границы -->
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="ButtonScale" ScaleX="1" ScaleY="1" />
                        </Border.RenderTransform>


                        <Viewbox Width="12" Height="14">
                            <Grid Width="33" Height="46">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="7" />
                                    <RowDefinition Height="39" />
                                </Grid.RowDefinitions>

                                <!-- Верхняя часть корзины (крышка) -->
                                <Canvas Grid.Row="0" Width="33" Height="7" HorizontalAlignment="Center">
                                    <Canvas.RenderTransform>
                                        <RotateTransform x:Name="TopRotation" Angle="0" CenterX="33" CenterY="3.5" />
                                    </Canvas.RenderTransform>
                                    <Line X1="0" Y1="5" X2="33" Y2="5" Stroke="White" StrokeThickness="4" />
                                    <Line X1="8" Y1="1.5" X2="25" Y2="1.5" Stroke="White" StrokeThickness="3" />
                                </Canvas>

                                <!-- Нижняя часть корзины -->
                                <Canvas Grid.Row="1" Width="33" Height="39" HorizontalAlignment="Center">
                                    <Path>
                                        <Path.Fill>
                                            <SolidColorBrush Color="#E5E5E5" />
                                            <!-- Изменено на серый цвет -->
                                        </Path.Fill>
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,0">
                                                    <LineSegment Point="33,0" />
                                                    <LineSegment Point="33,35" />
                                                    <ArcSegment Point="29,39" Size="4,4" SweepDirection="Clockwise" />
                                                    <LineSegment Point="4,39" />
                                                    <ArcSegment Point="0,35" Size="4,4" SweepDirection="Clockwise" />
                                                    <LineSegment Point="0,0" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                    <Path Stroke="White" StrokeThickness="4">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,0">
                                                    <LineSegment Point="33,0" />
                                                    <LineSegment Point="33,35" />
                                                    <ArcSegment Point="29,39" Size="4,4" SweepDirection="Clockwise" />
                                                    <LineSegment Point="4,39" />
                                                    <ArcSegment Point="0,35" Size="4,4" SweepDirection="Clockwise" />
                                                    <LineSegment Point="0,0" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                    <Line X1="11" Y1="6" X2="11" Y2="29" Stroke="White" StrokeThickness="4" />
                                    <Line X1="22" Y1="6" X2="22" Y2="29" Stroke="White" StrokeThickness="4" />
                                </Canvas>
                            </Grid>
                        </Viewbox>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="TopRotation"
                                                     Storyboard.TargetProperty="Angle"
                                                     To="45" Duration="0:0:0.3" />
                                    <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    To="#FF0000" Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="TopRotation"
                                                     Storyboard.TargetProperty="Angle"
                                                     To="0" Duration="0:0:0.3" />
                                    <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    To="#E5E5E5" Duration="0:0:0.3" />
                                    <!-- Изменено на серый цвет -->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonScale"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="0.9" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="ButtonScale"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="0.9" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonScale"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="ButtonScale"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Стиль для кнопки "Добавить группу" -->
    <Style x:Key="AddButtonStyle3" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource BlueBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="5,5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <!-- Иконка плюса -->
                            <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"
                                  Fill="{TemplateBinding Foreground}"
                                  Width="14" Height="14"
                                  Stretch="Uniform"
                                  Margin="0,0,8,0"
                                  VerticalAlignment="Center" />
                            <ContentPresenter VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource DarkBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource DeepBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#BDBDBD" />
                            <Setter Property="Foreground" Value="#757575" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


   
   
    <Style x:Key="DeleteXSvgButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#757575" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse x:Name="ButtonEllipse"
                                 Fill="Transparent"
                                 Width="24" Height="24" />
                        <!-- SVG-подобная иконка крестика -->
                        <Path x:Name="CrossPath"
                              Data="M6.4,6.4 L17.6,17.6 M6.4,17.6 L17.6,6.4"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1.5"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CrossPath" Property="Stroke" Value="#F44336" />
                            <Setter TargetName="CrossPath" Property="StrokeThickness" Value="2" />
                            <Setter TargetName="ButtonEllipse" Property="Fill" Value="#FFEBEE" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CrossPath" Property="Stroke" Value="#D32F2F" />
                            <Setter TargetName="ButtonEllipse" Property="Fill" Value="#FFCDD2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SystemsListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="False"
                                      Template="{DynamicResource CustomScrollViewerControlTemplate}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Стиль для ItemContainer -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Margin" Value="1,0" />
                    <Setter Property="Padding" Value="8,6" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border x:Name="ItemBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="3"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#F5F5F5" TargetName="ItemBorder" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#E3F2FD" TargetName="ItemBorder" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#BBDEFB" TargetName="ItemBorder" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Стиль для всплывающего окна Popup -->
    <Style x:Key="ModernPopupStyle" TargetType="Popup">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="PopupAnimation" Value="Fade" />
        <Setter Property="StaysOpen" Value="False" />
        <Setter Property="Placement" Value="Bottom" />
        <Style.Resources>
            <!-- Стиль для границы Popup -->
            <Style x:Key="PopupBorderStyle" TargetType="Border">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="#DDDDDD" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="CornerRadius" Value="6" />
                <Setter Property="Margin" Value="5" />
            </Style>

            <!-- Стиль для заголовка Popup -->
            <Style x:Key="PopupHeaderStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="#333333" />
                <Setter Property="Margin" Value="0,0,0,12" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
        </Style.Resources>
    </Style>




   


    <Style x:Key="SaveButton" TargetType="Button">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#2196F3" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="15,0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#1976D2" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#1565C0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UpdateButton" TargetType="Button">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#4CAF50" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="15,0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#388E3C" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#2E7D32" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


  


    <!-- Стиль для элементов ListBox -->
    <Style x:Key="ModernListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="5,5" /> <!-- Увеличенные отступы -->
        <Setter Property="MinHeight" Value="20" /> <!-- Минимальная высота элемента -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderBrush="#F0F0F0">
                        <ContentPresenter VerticalAlignment="Center" /> <!-- Центрирование содержимого по вертикали -->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#E3F2FD" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#F5F5F5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Стиль для текста внутри ListBoxItem -->
    <Style x:Key="ListBoxItemTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13" /> <!-- Увеличенный размер шрифта -->
        <Setter Property="Margin" Value="5,2" /> <!-- Дополнительный отступ сверху и снизу -->
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>


   
    <Style x:Key="AnimatedCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="#2D3436" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#74B9FF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,0,0,0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Width="18"
                                Height="18"
                                CornerRadius="3">
                            <Path x:Name="checkMark"
                                  Data="M 2,7 L 7,12 L 14,3"
                                  Stroke="#74B9FF"
                                  StrokeThickness="2"
                                  Opacity="0">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0"
                                                    CenterX="9" CenterY="7.5" />
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ContentPresenter Grid.Column="1"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Margin="{TemplateBinding Padding}">

                            <ContentPresenter.Resources>
                                <!-- Стиль для текстового содержимого -->
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontFamily"
                                            Value="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=CheckBox}}" />
                                    <Setter Property="FontSize"
                                            Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType=CheckBox}}" />
                                    <Setter Property="Foreground" Value="#2D3436" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="FontWeight" Value="Regular" />
                                    <!-- Дополнительные эффекты при наведении -->
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="#0984E3" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="checkMark"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="checkMark"
                                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                         To="1" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="checkMark"
                                                         Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="checkMark"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="checkMark"
                                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="checkMark"
                                                         Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                         To="0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Background" Value="#F1F9F5" TargetName="checkBoxBorder" />
                            <Setter Property="BorderBrush" Value="#74B9FF" TargetName="checkBoxBorder" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="#74B9FF" TargetName="checkBoxBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 


  

   
  
</ResourceDictionary>