<views:BaseRevitWindow
    x:Class="MepElementsCopy.Views.MepElementsCopyView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:viewModel="clr-namespace:MepElementsCopy.ViewModels"
    xmlns:local="clr-namespace:MepElementsCopy.Views"
    mc:Ignorable="d"
    xmlns:converter="clr-namespace:MepElementsCopy.Views.Converters"
    xmlns:views="clr-namespace:NoNameApi.Views;assembly=NoNameAPI"
    xmlns:controls="clr-namespace:NoNameApi.Views.Controls;assembly=NoNameAPI"
    Height="600" Width="400"
    d:DataContext="{d:DesignInstance viewModel:MepElementsCopyLevelsViewModel}"
    WindowStartupLocation="CenterScreen"
    Title="Копировать элементы"
    MinWidth="300">
    <Window.Resources>
        <ResourceDictionary>
            <!-- Сначала все ресурсы, которые не являются словарями -->
            <converter:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
            <Storyboard x:Key="NotificationFadeIn">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3" />
            </Storyboard>
            <Storyboard x:Key="NotificationFadeOut">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.3" />
            </Storyboard>

            <!-- Затем блок MergedDictionaries должен быть полностью отдельным -->
            <d:ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/NoNameAPI;component/Views/Resources/Themes/DarkTheme.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/NoNameAPI;component/Views/Resources/Themes/Styles.xaml" />
            </d:ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Style="{DynamicResource Grid}"
        >
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TabControl 
            Margin="5"
            Style="{DynamicResource TabControlStyle}">
            <TabItem Header="Копировать по уровням"
                     Style="{DynamicResource TabItemStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <GroupBox Grid.Row="0"
                              Margin="5"
                              Header="Установить базовый уровень"
                              Style="{DynamicResource GroupBoxStyle}">
                        <StackPanel>
                            <ComboBox ItemsSource="{Binding LevelModels}"
                                      SelectedItem="{Binding SelectedLevelModel, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                      Style="{DynamicResource ModernComboBoxStyle}"
                                      Margin="0,0,0,10">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <Button Content="Установить уровень"
                                    Padding="3"
                                    Command="{Binding SetBaseLevelCommand}"
                                    Style="{DynamicResource CommonButtonStyle2}" />
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Grid.Row="1" 
                              Header="Уровни"
                              Margin="5 0 5 5"
                              Style="{DynamicResource GroupBoxStyle}">
                        <ListView ItemsSource="{Binding LevelModels}"
                                  Style="{DynamicResource ListViewStyle}"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Content="{Binding Path=Name}"
                                              IsChecked="{Binding Path=IsChecked}"
                                              Style="{DynamicResource JellyCheckboxStyle}" />
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </GroupBox>

                    <Button Grid.Row="2"
                            Content="Копировать"
                            Command="{Binding MepElementsCopyElevationCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{DynamicResource CommonButtonStyle2}"
                            Margin="0 0 5 5"
                            HorizontalAlignment="Right"
                            Width="120"
                            Height="35" />
                </Grid>
            </TabItem>

            <TabItem Header="Копировать в направлении"
                     Style="{DynamicResource TabItemStyle}">
                <local:CopyToDirectionWindow DataContext="{Binding}" />
            </TabItem>
        </TabControl>
        <StatusBar Grid.Row="1"
                   Margin="5"
                   Padding="3"
                   Style="{DynamicResource StatusBarStyle}"
                  >
            <TextBlock Text="{Binding StatusMessage}" Margin="10,2" Foreground="#333333" />
        </StatusBar>
    </Grid>


</views:BaseRevitWindow>